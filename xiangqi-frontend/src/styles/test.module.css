.container {
  min-height: 100vh;
  width: 100%;
  display: flex;
  gap: 2rem;
  padding: 2rem;
  align-items: center;
  justify-content: center;
  background: #f0f0f0;
}

.gameArea {
  display: flex;
  gap: 2rem;
}

.board {
  position: relative;
  display: inline-block;
}

.boardGrid {
  box-sizing: content-box;
  border: 4px solid #666;
  border-left: 0;
  position: relative;
  user-select: none;
  cursor: default;
}

.row {
  height: 64px;
  position: relative;
}

.cell {
  width: 64px;
  height: 64px;
  display: inline-block;
  position: relative;
  border-left: 4px solid #666;
  border-top: 4px solid #666;
}

.cell:first-child {
  border-left: 4px solid #666;
}

.row:first-child .cell {
  border-top: 0;
}

.validMove {
  background: rgba(255, 255, 0, 0.2);
}

.piece {
  position: absolute;
  cursor: pointer;
  width: 52px;
  height: 52px;
  border-radius: 52px;
  line-height: 52px;
  text-align: center;
  font-size: 32px;
  vertical-align: middle;
  background: wheat;
  text-shadow: 0 0 1px;
  box-shadow: 0 0 1px 1px rgba(0, 0, 0, 0.3);
  z-index: 10;
}

.piece.red {
  color: #dc2626;
}

.piece.black {
  color: #15803d;
}

.selected {
  outline: 4px dashed rgba(0, 0, 0, 0.2);
  outline-offset: 2px;
}

.marker {
  position: absolute;
  width: 16px;
  height: 16px;
  transform: translate(-50%, -50%);
  outline: 4px dotted #666;
}

.controls {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  min-width: 200px;
}

.button {
  padding: 0.5rem 1rem;
  background: #4b5563;
  color: white;
  border: none;
  border-radius: 0.25rem;
  cursor: pointer;
  transition: background 0.2s;
}

.button:hover {
  background: #374151;
}

.moveHistory {
  background: white;
  padding: 1rem;
  border-radius: 0.25rem;
  max-height: 400px;
  overflow-y: auto;
}

.moveItem {
  padding: 0.5rem;
  border-bottom: 1px solid #e5e7eb;
}

.moveItem:last-child {
  border-bottom: none;
}

.gameOver {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 20;
}

.gameOverContent {
  background: white;
  padding: 2rem;
  border-radius: 0.5rem;
  text-align: center;
}

@keyframes highlight {
  0% {
    transform: scale(1) translate(-50%, -50%);
  }
  50% {
    transform: scale(1.1) translate(-50%, -50%);
  }
  100% {
    transform: scale(1) translate(-50%, -50%);
  }
}
.mk {
  position: absolute;
  width: 16px;
  height: 16px;
  margin-left: -8px;
  margin-top: -8px;
  outline: dotted 4px #666;
}
.captured {
  animation: highlight 0.3s ease;
}
.validMove {

}
.validMove::after {
  content: "";
  position: absolute;
  width: 16px;
  height: 16px;
  background: rgba(0, 255, 0, 0.2);
  border-radius: 50%;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

/*akfjbkasjdbakds*/
.container {
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
  padding: 2rem;
  background: #f0f0f0;
}

.gameArea {
  display: flex;
  gap: 2rem;
  align-items: flex-start;
}

.board {
  position: relative;
  display: inline-block;
}

.controls {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  min-width: 200px;
}

.button {
  padding: 0.5rem 1rem;
  background: #4b5563;
  color: white;
  border: none;
  border-radius: 0.25rem;
  cursor: pointer;
  transition: background 0.2s;
}

.button:hover {
  background: #374151;
}

.moveHistory {
  background: white;
  padding: 1rem;
  border-radius: 0.25rem;
  max-height: 400px;
  overflow-y: auto;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.moveHistory h3 {
  margin-top: 0;
  margin-bottom: 1rem;
}

.moveItem {
  padding: 0.5rem;
  border-bottom: 1px solid #e5e7eb;
}

.moveItem:last-child {
  border-bottom: none;
}

.gameOver {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 20;
}

.gameOverContent {
  background: white;
  padding: 2rem;
  border-radius: 0.5rem;
  text-align: center;
}

.row,
.sq {
  box-sizing: border-box;
  position: relative;
}

.boardGrid {
  box-sizing: content-box;
  border: 4px solid #666;
  border-left: 0;
  position: relative;
  user-select: none;
  cursor: default;
}

.row {
  height: 64px;
}

.sq {
  width: 64px;
  height: 64px;
  display: inline-block;
  border-left: solid 4px #666;
  border-top: solid 4px #666;
}

.row:nth-child(1) .sq {
  border-top: none;
}

.row.middle .sq {
  border-left: none;
}

.row.middle .sq:nth-child(1) {
  border-left: solid 4px #666;
}

.sq.cross:before {
  content: "";
  display: block;
  position: absolute;
  top: -5px;
  left: -93px;
  width: 181.01933598375618px;
  height: 181.01933598375618px;
  box-sizing: border-box;
  border-top: solid 4px #666;
  transform: rotate(45deg);
  transform-origin: top center;
}

.sq.cross:after {
  content: "";
  display: block;
  position: absolute;
  top: -4px;
  left: -93px;
  width: 181.01933598375618px;
  height: 181.01933598375618px;
  box-sizing: border-box;
  border-top: solid 4px #666;
  transform: rotate(-45deg);
  transform-origin: top center;
}

.mk {
  position: absolute;
  width: 16px;
  height: 16px;
  margin-left: -8px;
  margin-top: -8px;
  outline: dotted 4px #666;
}

.ch {
  position: absolute;
  cursor: pointer;
  width: 52px;
  height: 52px;
  border-radius: 52px;
  line-height: 52px;
  text-align: center;
  font-size: 32px;
  margin-left: -26px;
  margin-top: -26px;
  vertical-align: middle;
  background: wheat;
  text-shadow: 0 0 1px;
  box-shadow: 0 0 1px 1px rgba(0, 0, 0, 0.3);
}

.ch.green {
  color: green;
}

.ch.red {
  color: red;
}

.ch.green.active {
  outline: dashed 10px rgba(200, 250, 100, 0.4);
}

.ch.red.active {
  outline: dashed 10px rgba(250, 180, 180, 0.4);
}

.validMove {
  position: relative;
}

.validMove::after {
  content: "";
  position: absolute;
  width: 16px;
  height: 16px;
  background: rgba(0, 255, 0, 0.2);
  border-radius: 50%;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.active {
  background-color: rgba(255, 255, 0, 0.3);
}

@keyframes highlight {
  0% {
    transform: scale(1) translate(-50%, -50%);
  }
  50% {
    transform: scale(1.1) translate(-50%, -50%);
  }
  100% {
    transform: scale(1) translate(-50%, -50%);
  }
}

.captured {
  animation: highlight 0.3s ease;
}
